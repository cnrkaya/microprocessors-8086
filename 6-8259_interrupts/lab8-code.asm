CODE    SEGMENT PARA 'CODE'
        ASSUME CS:CODE, DS:DATA, SS:STAK
	
DATA    SEGMENT PARA 'DATA'
DIGITS  DB 0C0H, 0F9H, 0A4H, 0B0H, 99H, 92H, 82H, 0F8H, 80H, 98H ,00H, 0C0H
DATA    ENDS

STAK    SEGMENT PARA STACK 'STACK'
        DW 20 DUP(?)
STAK    ENDS

NEWINT  PROC FAR

	INC AX

        IRET
NEWINT  ENDP	

START PROC
        MOV AX, DATA
	MOV DS, AX
	

;B SIKKI-------------------------------------------
MOV AL ,04H ;KESME VEKTOR TABLOSUNDA HER KESME 4 BYTE YER KAPLAR 
MOV AH ,02H ;TIP2 KESME 
MUL AH
MOV BX, AX 

XOR AX,AX
MOV ES ,AX ;SEGMENTTEKI OFFSET DEGERI
LEA AX,NEWINT
MOV ES:[BX],AX  ;NEWINT IN OFFSET DEGERI
MOV AX,CS
MOV ES:[BX+2] , AX ;NEWINT IN BULUNDUGU SEGMENT

;C SIKKI-------------------------------------------
MOV AL ,04H ;KESME VEKTOR TABLOSUNDA HER KESME 4 BYTE YER KAPLAR 
MOV AH ,40H ;TIP40 KESME 
MUL AH
MOV BX, AX 

XOR AX,AX
MOV ES ,AX ;SEGMENTTEKI OFFSET DEGERI
LEA AX,NEWINT
MOV ES:[BX],AX  ;NEWINT IN OFFSET DEGERI
MOV AX,CS
MOV ES:[BX+2] , AX ;NEWINT IN BULUNDUGU SEGMENT


; WRITE INITIALIZATION INSTRUCTIONS HERE

;8259 INTR HANDLER
MOV AL,13H
OUT 00H, AL
MOV AL, 40H  ;KESME VECTOR ADRESI
OUT 02H, AL
MOV AL, 03H
OUT 02H, AL

;TIMER
MOV DX, 406H
MOV AL, 00110101B ;CNTR 0 MODE 2 BCD
OUT DX,AL

MOV DX,400H
MOV AL,00H
OUT DX,AL
MOV AL ,10H
OUT DX,AL

;8255
MOV AL,80H
MOV DX,206H
OUT DX,AL
STI
XOR AX, AX

PRIMARY_DATA_LOOP:

MOV BX,AX
MOV DX,0200H
PUSH AX
MOV AL ,DIGITS[BX]
OUT DX,AL
POP AX
CALL DELAY

JMP PRIMARY_DATA_LOOP

	
	
RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DELAY PROC NEAR

;Remember to save previous values
;Looping to spend sometime

MOV CX, 0FFH
LOOP1: LOOP LOOP1

RET
DELAY ENDP

START ENDP
	
CODE    ENDS
        END START